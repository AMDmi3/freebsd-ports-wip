TUT is a pure C++ unit test framework. Its name - TUT - stands for
Template Unit Tests. TUT provides all features required for unit
testing:
   
 * Similar tests can be grouped together into test groups. Each
   test group has its unique name and is located in a separate
   compilation unit. One group can contain almost unlimited number
   of tests (actually, the limit is the compiler template recursion
   depth).
 * User can run all the tests (regression), or just some selected
   groups or even some tests in these groups.
 * TUT provides special template functions to check the condition
   validity at run-time and to force test failure if required.
   Since C++ doesn't provide a facility for obtaining stack trace
   of the throwed exception and TUT avoids macros, those functions
   accept string marker to allow users easely determine the source
   of exception.
 * TUT contains callback that can be implemented by the calling code
   to integrate with an IDE, for example. Callbacks tell listener
   when a new test run started, when test runner switches to the
   next tests group, when a test was completed (and what result it
   has), and when test run was finished. The callbacks allow users
   to produce their own visualization format for test process and results.
 * Being a template library, it doesn't need compilation; just
   include the <tut.h> header into the test modules.

WWW: http://tut-framework.sourceforge.net/
